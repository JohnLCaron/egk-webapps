openapi: "3.0.3"
info:
  title: "egk_webapps API"
  description: "egk_webapps API"
  version: "1.0.0"
servers:
- url: "https://egk_webapps"
paths:
  /egk/ktrustee:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No guardians found"
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/RemoteKeyTrustee"
              examples:
                Example#1:
                  description: ""
                  value: []
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/RemoteKeyTrustee"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
  /egk/ktrustee/{id}/checkComplete:
    get:
      description: "val url = \"$remoteURL/ktrustee/$id/checkComplete\""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /egk/ktrustee/{id}/encryptedKeyShareFor/{forTrustee}:
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "forTrustee"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: "Missing 'forTrustee' id"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EncryptedKeyShareJson"
  /egk/ktrustee/{id}/keyShareFor/{forTrustee}:
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "forTrustee"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: "Missing 'forTrustee' id"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/KeyShareJson"
  /egk/ktrustee/{id}/publicKeys:
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PublicKeysJson"
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
  /egk/ktrustee/{id}/receiveEncryptedKeyShare:
    post:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/EncryptedKeyShareJson"
        required: true
      responses:
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
  /egk/ktrustee/{id}/receiveKeyShare:
    post:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/KeyShareJson"
        required: true
      responses:
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  description: ""
                  value: "null"
                Example#2:
                  description: ""
                  value: "null"
  /egk/ktrustee/{id}/receivePublicKeys:
    post:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/PublicKeysJson"
        required: true
      responses:
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
  /egk/ktrustee/{id}/saveState:
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
components:
  schemas:
    RemoteKeyTrustee:
      type: "object"
      properties:
        id:
          type: "string"
        xCoordinate:
          type: "integer"
          format: "int32"
        nguardians:
          type: "integer"
          format: "int32"
        quorum:
          type: "integer"
          format: "int32"
    ElementModPJson:
      type: "object"
      properties:
        bytes:
          type: "array"
          items:
            type: "string"
            format: "byte"
    UInt256Json:
      type: "object"
      properties:
        bytes:
          type: "array"
          items:
            type: "string"
            format: "byte"
    HashedElGamalCiphertextJson:
      type: "object"
      properties:
        c0:
          $ref: "#/components/schemas/ElementModPJson"
        c1:
          type: "string"
        c2:
          $ref: "#/components/schemas/UInt256Json"
        numBytes:
          type: "integer"
          format: "int32"
    EncryptedKeyShareJson:
      type: "object"
      properties:
        ownerXcoord:
          type: "integer"
          format: "int32"
        polynomial_owner:
          type: "string"
        secret_share_for:
          type: "string"
        encrypted_coordinate:
          $ref: "#/components/schemas/HashedElGamalCiphertextJson"
    ElementModQJson:
      type: "object"
      properties:
        bytes:
          type: "array"
          items:
            type: "string"
            format: "byte"
    KeyShareJson:
      type: "object"
      properties:
        ownerXcoord:
          type: "integer"
          format: "int32"
        polynomial_owner:
          type: "string"
        secret_share_for:
          type: "string"
        coordinate:
          $ref: "#/components/schemas/ElementModQJson"
    SchnorrProofJson:
      type: "object"
      properties:
        public_key:
          $ref: "#/components/schemas/ElementModPJson"
        challenge:
          $ref: "#/components/schemas/ElementModQJson"
        response:
          $ref: "#/components/schemas/ElementModQJson"
    PublicKeysJson:
      type: "object"
      properties:
        guardianId:
          type: "string"
        guardianXCoordinate:
          type: "integer"
          format: "int32"
        coefficientProofs:
          type: "array"
          items:
            $ref: "#/components/schemas/SchnorrProofJson"